From 6193230600003911680@xxx Fri Sep 11 12:17:47 +0000 2015
X-GM-THRID: 6193230596693557248
X-Received: by 10.13.205.130 with SMTP id p124mr41673254ywd.6.1441973866289;
        Fri, 11 Sep 2015 05:17:46 -0700 (PDT)
X-BeenThere: opensport@googlegroups.com
Received: by 10.50.43.199 with SMTP id y7ls529836igl.24.gmail; Fri, 11 Sep
 2015 05:17:45 -0700 (PDT)
X-Received: by 10.107.131.73 with SMTP id f70mr1795218iod.18.1441973865943;
        Fri, 11 Sep 2015 05:17:45 -0700 (PDT)
Return-Path: <gerald.bauer@gmail.com>
Received: from mail-io0-x232.google.com (mail-io0-x232.google.com. [2607:f8b0:4001:c06::232])
        by gmr-mx.google.com with ESMTPS id j7si28179igu.1.2015.09.11.05.17.45
        for <opensport@googlegroups.com>
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 11 Sep 2015 05:17:45 -0700 (PDT)
Received-SPF: pass (google.com: domain of gerald.bauer@gmail.com designates 2607:f8b0:4001:c06::232 as permitted sender) client-ip=2607:f8b0:4001:c06::232;
Authentication-Results: gmr-mx.google.com;
       spf=pass (google.com: domain of gerald.bauer@gmail.com designates 2607:f8b0:4001:c06::232 as permitted sender) smtp.mailfrom=gerald.bauer@gmail.com;
       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Authentication-Results: mx.google.com;
       dkim=pass header.i=@gmail.com
Received: by mail-io0-x232.google.com with SMTP id b144so95698445iof.1
        for <opensport@googlegroups.com>; Fri, 11 Sep 2015 05:17:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type
         :content-transfer-encoding;
        bh=YaWa7yvvSfTqsDrTB7NZOiu2ubkbIDkr8NPUtzin23U=;
        b=TRklPBRMuVCusi0lkrwYs1xS79KFRu6j6edZABlAyJxWu4eLkd6ZjKrkn+OK+M38Uj
         YaN7tUtTEzlcV2pfG1292WCGASN2juklWNxc/3+rTJDNQd6wdpnfyyR/pGxunTEfrDAS
         85sJkWBwT1cKemdWt8P6VQiO0d4dha9jZvAVAMtUudWwh7zYeoMh35Z3SGw1afburJ9r
         MrPTOICtZST7mcnXKNmHjdgdO8CpTSlXJC1PY0//5FwF0E1CmQl+lwyyawUgi9hvXXAb
         iHKRJrdooVR5Ztv7YDTZWz6l07EpEvkynfoKD7ZEivh2nHC3O9SBlt7VyCW9PcJbrVo8
         l0cw==
MIME-Version: 1.0
X-Received: by 10.107.158.72 with SMTP id h69mr3542474ioe.52.1441973865690;
 Fri, 11 Sep 2015 05:17:45 -0700 (PDT)
Received: by 10.107.16.9 with HTTP; Fri, 11 Sep 2015 05:17:45 -0700 (PDT)
Date: Fri, 11 Sep 2015 14:17:45 +0200
Message-ID: <CAAxEZd8_oC2rRmZwTRo4zRfWuZr=VZUFY4GbV=UCP028axmDUQ@mail.gmail.com>
Subject: New RSSSF Reader In Action - Deutsche Bundesliga 2014/15, 2013/14
 (e.g. duit2015, duit2014) etc.
From: Gerald Bauer <gerald.bauer@gmail.com>
To: opensport@googlegroups.com
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hello,

   I've put together a new "simplified" RSSSF match schedule reader
[1] for leagues supporting the RSSSF-style format e.g.:

     Round 1
     [Aug 22]
     Bayern           2-1  Wolfsburg
     [Aug 23]
     K=C3=B6ln               0-0  Hamburg
     Dortmund        0-2  Leverkusen
     Frankfurt        1-0   Freiburg
     Hannover        2-1  Schalke
     Hertha            2-2  Bremen
     Hoffenheim     2-0  Augsburg
     [Aug 24]
     M=C3=B6nchengladbach  1-1  Stuttgart
     Paderborn              2-2  Mainz

    (Source: rsssf.com/tablesd/duit2015.html) [2]


   You can see the new reader in action in the rsssf org build/ repo
[3] for reading in the Deutsche Bundesliga.  For now there's no
Datafile or all-in-one-method read_setup call support. Read the
datasets one by one. Example:


  ## DE_INCLUDE_PATH =3D "../../openfootball/de-deutschland"

   de =3D WorldDb::Model::Country.find_by!( key: 'de' )

  ## read in clubs
  ##  note: requires country_id   e.g. de.id
  ['1-bundesliga', '2-bundesliga2'].each do |clubs|
    r =3D SportDb::TeamReader.from_file(
"#{DE_INCLUDE_PATH}/clubs/#{clubs}.txt", country_id: de.id)
    r.read
  end

  ## read in leagues
  ##  note: requires country_id   e.g. de.id
  r =3D SportDb::LeagueReader.from_file(
"#{DE_INCLUDE_PATH}/leagues.txt", country_id: de.id )
  r.read

  ## read in event configs (no match results/fixtures)
  ['2015-16', '2014-15', '2013-14'].each do |season|
    r =3D SportDb::EventReader.from_file(
"#{DE_INCLUDE_PATH}/#{season}/1-bundesliga.yml" )
    r.read
  end

  ## last but not least read rsssf files (from rsssf repo)
  ['2014-15', '2013-14'].each do |season|
    txt =3D File.read( "../de-deutschland/#{season}/1-bundesliga.txt" )

    event_key =3D "de.#{season.tr('-','/')}"    ## e.g. 2014-15 =3D> de.201=
4/15
    r =3D SportDb::RsssfGameReader.from_string( event_key, txt )
    r.read
  end


   That's it. If anyone reads in some RSSSF datasets, let us know how it go=
es.
Cheers.

[1] github.com/sportdb/sport.db.models/blob/master/lib/sportdb/rsssf_reader=
.rb
[2] www.rsssf.com/tablesd/duit2015.html
[3] github.com/rsssf/build

